buildscript {
    repositories {
        mavenLocal()
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:2.0.3"
    }
}

apply plugin: 'kotlin-platform-jvm'
apply plugin: 'kotlinx-serialization'
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: 'application'

mainClassName = "mmo.server.BackendKt"

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    compile "org.jetbrains.kotlin:kotlin-script-runtime:$kotlinVersion"
    compile "org.jetbrains.kotlin:kotlin-script-util:$kotlinVersion"
    compile "org.jetbrains.kotlin:kotlin-compiler-embeddable:$kotlinVersion"
    compile "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$serializationVersion"

    compile "io.ktor:ktor-server-netty:$ktor_version"
    compile "io.ktor:ktor-websockets:$ktor_version"
    compile "io.ktor:ktor-auth:$ktor_version"
    compile "io.ktor:ktor-client-apache:$ktor_version"
    compile "io.ktor:ktor-jackson:$ktor_version"

    compile "io.ktor.client:ktor-client-redis:$ktor_client_redis_version"

    compile "com.soywiz:korio-ktor-ext-jvm:$korgeVersion"

    compile "ch.qos.logback:logback-classic:$logback_version"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
sourceCompatibility = "1.8"

task runClient(type: JavaExec) {
    classpath sourceSets.main.runtimeClasspath
    main = "mmo.client.FrontendJvmKt"
    args ""
}

task runServer(type: JavaExec) {
    classpath sourceSets.main.runtimeClasspath
    main = "mmo.server.BackendKt"
    args ""
}

kotlin.experimental.coroutines "enable"

shadowJar {
    baseName = 'mmo-server'
    mainClassName = "mmo.server.BackendKt"
    classifier = null
    version = null
    doLast {
        copy {
            from new File(rootProject.rootDir, "mmo/jvm/build/libs/mmo-server.jar")
            into rootProject.rootDir
        }
    }
}
