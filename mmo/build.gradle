apply plugin: 'kotlin-multiplatform'
apply plugin: 'kotlinx-serialization'

kotlin {
    targets {
        fromPreset(presets.jvm, 'jvm')
        fromPreset(presets.js, 'js') {
            compilations.main {
                compileKotlinJs.kotlinOptions {
                    languageVersion = "1.3"
                    sourceMap = true
                    metaInfo = true
                    moduleKind = "umd"
                }
                compileTestKotlinJs.kotlinOptions {
                    languageVersion = "1.3"
                    moduleKind = "umd"
                }
            }
        }
    }
}

dependencies {
    commonMainApi "org.jetbrains.kotlinx:kotlinx-serialization-runtime-common:$serialization_version"
    jvmMainApi "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$serialization_version"
    jsMainApi "org.jetbrains.kotlinx:kotlinx-serialization-runtime-js:$serialization_version"

    commonMainApi "com.soywiz:korge:$korgeVersion"
    jvmMainApi "io.ktor:ktor-server-netty:$ktor_version"
    jvmMainApi "io.ktor:ktor-websockets:$ktor_version"
    jvmMainApi "io.ktor:ktor-websockets:$ktor_version"
    jvmMainApi "org.jetbrains.kotlin:kotlin-script-runtime:1.3.11"
    jvmMainApi "org.jetbrains.kotlin:kotlin-script-util:1.3.11"
}

//compileKotlin2Js {
//    kotlinOptions.outputFile = "${rootProject.projectDir}/${web_dir}/game.js"
//}
//
//[compileKotlin2Js, compileTestKotlin2Js]*.configure {
//    kotlinOptions.moduleKind = "umd"
//    kotlinOptions.sourceMap = false
//    kotlinOptions.metaInfo = false
//}
//
//task buildAndCopy(type: Copy, dependsOn: ['build']) {
//    // Copy kotlin.js and kotlin-meta.js from jar into web directory
//    configurations.compile.each { File file ->
//        //println(file.absolutePath)
//        from(zipTree(file.absolutePath)) {
//            exclude "**/*.meta.js", "**/*.kjsm"
//            include { fileTreeElement ->
//            def path = fileTreeElement.path
//                path.endsWith(".js") && (path.startsWith("META-INF/resources/") || !path.startsWith("META-INF/"))
//            }
//        }
//    }
//
//    from(new File("${buildDir}/resources/main")) {
//        exclude "**/*.meta.js", "**/*.kjsm"
//    }
//
//    // Copy scripts to web directory
//    from(new File("${buildDir}/classes/main")) {
//        exclude "**/*.meta.js", "**/*.kjsm"
//    }
//
//    from(new File("${buildDir}/classes/test")) {
//        exclude "**/*.meta.js", "**/*.kjsm"
//    }
//
//    from(new File("${buildDir}/resources/test")) {
//        exclude "**/*.meta.js", "**/*.kjsm"
//    }
//
//    includeEmptyDirs = false
//    into "${rootProject.projectDir}/${web_dir}"
//}
//
//clean.doFirst() {
//    delete("${rootProject.projectDir}/${web_dir}")
//}
